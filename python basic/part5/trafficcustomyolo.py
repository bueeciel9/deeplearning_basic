# -*- coding: utf-8 -*-
"""trafficCustomYolo.py

Generated by creApple. 2021


# Copy traffic-train-yolo.cfg
# Download Pretrained Convolutional Weights
#!wget https://pjreddie.com/media/files/darknet53.conv.74
# Train The Model
#./darknet detector train traffic.data traffic-train-yolo.cfg darknet53.conv.74 -dont_show
"""

import pandas as pd
import os

test_percentage = 0.2

# Train.csv
annotation = pd.read_csv('Train.csv')

Prohibitory = [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 15, 16]
Danger = [11, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]
Mandatory = [33, 34, 35, 36, 37, 38, 39, 40]
Other = [6, 12, 13, 14, 17, 32, 41, 42]

categories = [ 'Prohibitory', 'Danger', 'Mandatory', 'Other']

annotation['CategoryId'] = 0

annotation.loc[annotation['ClassId'].isin(Prohibitory), 'CategoryId'] = 0
annotation.loc[annotation['ClassId'].isin(Danger), 'CategoryId'] = 1
annotation.loc[annotation['ClassId'].isin(Mandatory), 'CategoryId'] = 2
annotation.loc[annotation['ClassId'].isin(Other), 'CategoryId'] = 3

annotation['centerX'] = (annotation['Roi.X2']+annotation['Roi.X1']) / 2 / annotation['Width']
annotation['centerY'] = (annotation['Roi.Y2']+annotation['Roi.Y1']) / 2 / annotation['Height']

annotation['width'] = (annotation['Roi.X2'] - annotation['Roi.X1']) / annotation['Width']
annotation['height'] = (annotation['Roi.Y2'] - annotation['Roi.Y1']) / annotation['Height']

annotation = annotation.drop(['Width', 'Height', 'Roi.X1', 'Roi.Y1', 'Roi.X2', 'Roi.Y2', 'ClassId'], axis='columns')

with open('classes.names', 'w') as names:
    for category in categories:
        line = category +'\n'
        names.write(line)
    print('[classes.names] is created')

with open('traffic.data', 'w') as data:
    data.write('classes = ' + str(len(categories)) + '\n')
    data.write('train = ' + 'train.txt' + '\n')
    data.write('valid = ' +  'test.txt' + '\n')
    data.write('names = ' +  'classes.names' + '\n')
    data.write('backup = backup')
    print('[custom_data.data] is created')

paths = []
for index, data in annotation.iterrows():
    #print(index,data['Path'][:-4], data['Path'].split('.')[0])
    txt_file = data['Path'].split('.')[0] +'.txt'
    line = str(data['CategoryId']) + ' ' + str(data['centerX']) + ' ' + str(data['centerY']) + ' ' + str(data['width']) + ' ' + str(data['height']) + '\n'
    with open(txt_file, 'w') as txt:
        txt.write(line)
    image_path = data['Path'] + '\n'
    paths.append(image_path)
    print(index, txt_file, line)

num_test = int(len(paths) * test_percentage)
print(num_test)

paths_test = paths[:num_test]
paths_train = paths[num_test:]

with open('train.txt', 'w') as train_txt:
    for path in paths_train:
        train_txt.write(path)
    print('[train.txt] is created')

with open('test.txt', 'w') as test_txt:
    for path in paths_test:
        test_txt.write(path)
    print('[test.txt] is created')


